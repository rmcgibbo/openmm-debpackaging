#!/usr/bin/make -f

CPPFLAGS:=$(shell dpkg-buildflags --get CPPFLAGS)
CFLAGS:=$(shell dpkg-buildflags --get CFLAGS) $(CPPFLAGS)
CXXFLAGS:=$(shell dpkg-buildflags --get CXXFLAGS) $(CPPFLAGS)
LDFLAGS:=$(shell dpkg-buildflags --get LDFLAGS) -Wl,--as-needed
UBUNTU_NVIDIA_DIR=$(shell sed -n '/^\/usr\/lib\//{p;q}' /etc/ld.so.conf.d/$(DEB_BUILD_MULTIARCH)_GL.conf)
OPENMM_INCLUDE_PATH:=$(CURDIR)/debian/tmp/usr/lib/openmm/include
OPENMM_LIB_PATH:=$(CURDIR)/debian/tmp/usr/lib/openmm/lib

CMAKE_FLAGS = \
        -DCMAKE_INSTALL_PREFIX=/usr/lib/openmm \
        -DCMAKE_VERBOSE_MAKEFILE=ON \
        -DCMAKE_C_FLAGS_RELEASE="$(CFLAGS)" \
        -DCMAKE_CXX_FLAGS_RELEASE="$(CXXFLAGS)" \
        -DCMAKE_SHARED_LINKER_FLAGS_RELEASE="$(LDFLAGS)" \
        -DCMAKE_BUILD_TYPE=Release      \
        $(CMAKE_ARCH_FLAGS) \
        -DCUDA_CUDA_LIBRARY=$(UBUNTU_NVIDIA_DIR)/libcuda.so \
        -DOPENMM_BUILD_AMOEBA_PLUGIN=ON \
        -DOPENMM_BUILD_RPMD_PLUGIN=ON \
        -DOPENMM_BUILD_DRUDE_PLUGIN=ON \
        -DOPENMM_BUILD_SERIALIZATION_SUPPORT=ON \
        -DOPENMM_BUILD_C_AND_FORTRAN_WRAPPERS=OFF \

%:
	dh $@ --with quilt --buildsystem=cmake

override_dh_clean:
	dh_clean -O--buildsystem=cmake

override_dh_auto_configure:
	dh_auto_configure -- $(CMAKE_FLAGS) $(CMAKE_ARCH_FLAGS)

override_dh_auto_build:
	dh_auto_build -- VERBOSE=1

override_dh_auto_install:
	dh_auto_install -O--buildsystem=cmake
	cd  obj-*/python; \
	export OPENMM_INCLUDE_PATH=$(OPENMM_INCLUDE_PATH); \
	export OPENMM_LIB_PATH=$(OPENMM_LIB_PATH); \
	/usr/bin/python setup.py build install --install-layout=deb --root=$(CURDIR)/debian/tmp

override_dh_auto_test:
	echo "Skipping tests"

override_dh_shlibdeps:
	dh_shlibdeps --dpkg-shlibdeps-params=--ignore-missing-info


